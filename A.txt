import pandas as pd
from pathlib import Path
from openpyxl import load_workbook
from openpyxl.utils.dataframe import dataframe_to_rows
from datetime import datetime
import re
import os

# User-provided zip file path to extract the date
zip_file_path = "VFIN_06May2024.zip"
date_for_append = Path(zip_file_path).stem.split("_")[1]  # e.g., '06May2024'

# Load Excel files
vfin_df = pd.read_excel("Vfin.xlsx")
buyfp_df = pd.read_excel("buyfp.xlsx")

# Convert date columns
vfin_df['Date'] = pd.to_datetime(vfin_df['Date'], errors='coerce')
buyfp_df['Date'] = pd.to_datetime(buyfp_df['Date'], errors='coerce')

# Normalize customer names
customer_group_map = {
    "arcemitthal il": "Arcemitthal",
    "arcemitthal lp": "Arcemitthal",
    "arcemitthal": "Arcemitthal",
    "badshah": "Badshah",
    "exotic fruit": "Exotic Fruit"
}
buyfp_df['Customer Normalized'] = (
    buyfp_df['Customer Name'].str.strip().str.lower()
    .map(customer_group_map)
    .fillna(buyfp_df['Customer Name'])
)

# Output folder
root_output = Path("Customer_Excels")
root_output.mkdir(exist_ok=True)

# Process each customer
for customer in buyfp_df['Customer Normalized'].dropna().unique():
    cust_buyfp = buyfp_df[buyfp_df['Customer Normalized'].str.lower() == customer.lower()].copy()
    if 'Customer Normalized' in cust_buyfp.columns:
        cust_buyfp.drop(columns=['Customer Normalized'], inplace=True)

    # Determine months from buyfp dates
    all_dates = cust_buyfp["Date"].dropna().dt.to_period("M").unique()
    for period in all_dates:
        start = period.to_timestamp()
        year_str = start.strftime('%Y')
        month_str = start.strftime('%b')

        # Dynamically load correct sheet from config
        sheet_name = f"{month_str}-{year_str}"
        config_df = pd.read_excel("customer_config.xlsx", sheet_name=sheet_name)

        config = config_df[config_df['Customer Name'].str.lower() == customer.lower()]
        if config.empty:
            continue
        config = config.iloc[0]
        tbill, spread, tenor, roi = config['TBill Rate'], config['Spread'], config['Tenor'], config['ROI']

        cust_buyfp['Rate'] = tbill + spread
        cust_buyfp['Interest Amount'] = round(cust_buyfp['Bill amount'] * cust_buyfp['Rate'] * tenor / 36500, 2)

        # Match vfin
        if "badshah" in customer.lower():
            cust_vfin = vfin_df[vfin_df['Customer Name'].str.lower().str.contains("badshah")].copy()
        elif "exotic fruit" in customer.lower():
            cust_vfin = vfin_df[vfin_df['Customer Name'].str.lower().str.contains("exotic fruit")].copy()
        elif "arcemitthal" in customer.lower():
            cust_vfin = vfin_df[vfin_df['Customer Name'].str.lower().str.contains("arcemitthal|arcemittal")].copy()
        else:
            cust_vfin = vfin_df[vfin_df['Customer Name'].str.lower().str.strip() == customer.lower().strip()].copy()

        cust_vfin['ROI'] = roi
        principal_col = 'Amount' if 'Amount' in cust_vfin.columns else 'Principal'
        cust_vfin['Interest Amount'] = round(cust_vfin[principal_col] * roi * 1 / 36500, 2)

        # Filter vfin and buyfp by month
        vfin_month = cust_vfin[(cust_vfin["Date"] >= start) & (cust_vfin["Date"] <= start + pd.offsets.MonthEnd(0))]
        buyfp_month = cust_buyfp[(cust_buyfp["Date"] >= start) & (cust_buyfp["Date"] <= start + pd.offsets.MonthEnd(0))]

        customer_dir = root_output / customer / year_str / month_str
        customer_dir.mkdir(parents=True, exist_ok=True)
        file_path = customer_dir / f"{customer}_{month_str}.xlsx"

        if not file_path.exists():
            with pd.ExcelWriter(file_path, engine='openpyxl') as writer:
                vfin_month.to_excel(writer, sheet_name="vfin", index=False)
                buyfp_month.to_excel(writer, sheet_name="buyfp", index=False)

            # Re-open and insert date row at top of vfin
            wb = load_workbook(file_path)
            ws = wb["vfin"]
            ws.insert_rows(1)
            ws.cell(row=1, column=1, value=date_for_append)
            wb.save(file_path)
        else:
            wb = load_workbook(file_path)
            if "vfin" in wb.sheetnames:
                sheet = wb["vfin"]
                sheet.append([date_for_append])
                for row in dataframe_to_rows(vfin_month, index=False, header=False):
                    sheet.append(row)
            if "buyfp" in wb.sheetnames:
                wb.remove(wb["buyfp"])
            with pd.ExcelWriter(file_path, engine='openpyxl', mode='a', if_sheet_exists='overlay') as writer:
                writer.book = wb
                buyfp_month.to_excel(writer, sheet_name="buyfp", index=False)
                writer.save()

# Delete original vfin file
try:
    os.remove("Vfin.xlsx")
    print("â Vfin.xlsx deleted successfully.")
except FileNotFoundError:
    print("â ï¸ Vfin.xlsx not found.")
except Exception as e:
    print(f"â Error deleting Vfin.xlsx: {e}")
