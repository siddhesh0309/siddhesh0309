import pandas as pd

# Define keyword to standardized name
column_mappings = {
    'deductee': 'deducted',
    'decutee': 'deducted',
    'deducted': 'deducted',
    'ebn': 'ebn',
    'status': 'status',
    'email': 'email',
    'pan': 'pan'  # ‚úÖ added pan mapping
}

def extract_relevant_columns_xlsb(file_path):
    df = pd.read_excel(file_path, engine='pyxlsb', header=1)
    df.columns = [str(col).strip() for col in df.columns]

    selected_columns = []
    rename_map = {}
    found_targets = set()

    for col in df.columns:
        col_lower = col.lower()

        for keyword, target_name in column_mappings.items():
            if keyword in col_lower and target_name not in found_targets:
                selected_columns.append(col)
                rename_map[col] = target_name
                found_targets.add(target_name)
                break

        if len(found_targets) == len(set(column_mappings.values())):
            break  # Stop early if all needed columns found

    if not selected_columns:
        print(f"‚ö†Ô∏è No matching columns found in {file_path}")
        return pd.DataFrame()

    return df[selected_columns].rename(columns=rename_map)

# Process both XLSB files
df_res = extract_relevant_columns_xlsb("res.xlsb")
df_nres = extract_relevant_columns_xlsb("nres.xlsb")

# Combine data
combined_df = pd.concat([df_res, df_nres], ignore_index=True)

# Remove duplicates by PAN
if 'pan' in combined_df.columns:
    combined_df_unique = combined_df.drop_duplicates(subset='pan', keep='first')
    print(f"‚úÖ Total unique PANs: {len(combined_df_unique)}")
    combined_df_unique.to_excel("unique_pan_data.xlsx", index=False)
    print("üìÅ Saved as 'unique_pan_data.xlsx'")
else:
    print("‚ùå PAN column not found in combined data.")
