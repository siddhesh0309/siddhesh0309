import pandas as pd
import os
from openpyxl import load_workbook
from openpyxl.utils.dataframe import dataframe_to_rows
from glob import glob

# Paths
template_folder = "Templates"
master_template = "master_template.xlsm"
output_file = "updated_master_template.xlsm"
mapping_file = "mapping.xlsx"

# Sheet settings: headers at row 4 (skiprows=3), data starts at row 9 (skiprows=8)
sheets = {
    "Account Holder": {"skiprows": 8},
    "Controlling Person": {"skiprows": 8}
}

# Container for merged data
merged_data = {sheet: [] for sheet in sheets}

# ✅ Load mapping file (headers in row 4, data starts from row 9)
print("📘 Reading mapping file...")
mapping_df = pd.read_excel(mapping_file, skiprows=3, engine="openpyxl")
mapping_df = mapping_df.iloc[5:].reset_index(drop=True)  # Skip to data from row 9
mapping_df = mapping_df.astype(str)
mapping_set = set(zip(mapping_df["Account Number"], mapping_df["Customer ID"]))

# 📥 Read all template files
files = glob(os.path.join(template_folder, "*.xlsm"))

print("📥 Reading template files...")
for file in files:
    print(f"→ Processing: {os.path.basename(file)}")

    for sheet_name, opts in sheets.items():
        try:
            df = pd.read_excel(file, sheet_name=sheet_name, skiprows=opts["skiprows"], header=None, engine="openpyxl")

            if df.empty:
                print(f"⚠️ Skipping '{sheet_name}' in {os.path.basename(file)} — no data found after row 8.")
                continue

            # Get headers from row 4
            headers = pd.read_excel(file, sheet_name=sheet_name, skiprows=3, nrows=1, engine="openpyxl").columns.tolist()

            if len(headers) != df.shape[1]:
                print(f"⚠️ Skipping '{sheet_name}' in {os.path.basename(file)} — column count mismatch.")
                continue

            df.columns = headers
            df = df.astype(str)
            merged_data[sheet_name].append(df)

        except Exception as e:
            print(f"❌ Error reading '{sheet_name}' in {os.path.basename(file)}: {e}")

# ✍️ Load master template
print("✍️ Loading master template...")
wb = load_workbook(master_template, keep_vba=True)

# 🔁 Write to each sheet
for sheet_name in sheets:
    if sheet_name not in wb.sheetnames:
        print(f"❌ Sheet '{sheet_name}' not found in master template. Skipping.")
        continue

    if not merged_data[sheet_name]:
        print(f"ℹ️ No data collected for '{sheet_name}'. Skipping.")
        continue

    ws = wb[sheet_name]
    start_row = 9  # Write after header

    # Combine and map
    full_df = pd.concat(merged_data[sheet_name], ignore_index=True)

    # ✅ Add Status column
    if {"Account Number", "Customer ID"}.issubset(full_df.columns):
        full_df["Status"] = full_df.apply(
            lambda row: "TRUE" if (row["Account Number"], row["Customer ID"]) in mapping_set else "FALSE",
            axis=1
        )
    else:
        print(f"⚠️ Required columns not found in '{sheet_name}', skipping Status.")

    # 📝 Write to Excel
    print(f"✍️ Writing {len(full_df)} rows to '{sheet_name}'...")
    for r_idx, row in enumerate(dataframe_to_rows(full_df, index=False, header=False), start=start_row):
        for c_idx, value in enumerate(row, start=1):
            ws.cell(row=r_idx, column=c_idx, value=value)

# 💾 Save result
wb.save(output_file)
print(f"✅ Master template saved as '{output_file}'")
