import fitz  # PyMuPDF
import cv2
import numpy as np
import os
import pandas as pd

def extract_second_table(image_path, debug=False):
    img = cv2.imread(image_path)
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    gray = cv2.bitwise_not(gray)
    _, thresh = cv2.threshold(gray, 128, 255, cv2.THRESH_BINARY | cv2.THRESH_OTSU)

    # Detect lines
    horizontal_kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (40, 1))
    vertical_kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (1, 20))
    horizontal_lines = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, horizontal_kernel, iterations=2)
    vertical_lines = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, vertical_kernel, iterations=2)
    table_mask = cv2.add(horizontal_lines, vertical_lines)

    # Detect contours
    contours, _ = cv2.findContours(table_mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    bounding_boxes = [cv2.boundingRect(c) for c in contours if cv2.boundingRect(c)[2] > 30 and cv2.boundingRect(c)[3] > 20]
    bounding_boxes = sorted(bounding_boxes, key=lambda b: b[1])  # Top-down

    # Group into table blocks
    tables = []
    current_table = []
    last_y = -999
    for box in bounding_boxes:
        x, y, w, h = box
        if abs(y - last_y) > 60 and current_table:
            tables.append(current_table)
            current_table = []
        current_table.append(box)
        last_y = y
    if current_table:
        tables.append(current_table)

    if debug:
        print(f"Detected tables: {len(tables)}")
        for i, table in enumerate(tables):
            print(f"  Table {i+1}: {len(table)} boxes")

    if len(tables) >= 2:
        second_table = tables[1]
        # Group rows by Y-coordinate bins
        sorted_rows = {}
        for x, y, w, h in second_table:
            center_y = y + h // 2
            row_key = center_y // 25
            sorted_rows.setdefault(row_key, []).append((x, y, w, h))

        output_rows = []
        for key in sorted(sorted_rows.keys()):
            row = sorted(sorted_rows[key], key=lambda b: b[0])  # left to right
            if len(row) > 1:  # avoid noisy rows
                output_rows.append(["" for _ in row])

        return output_rows if output_rows else None
    return None

# Main: convert first 3 pages and extract second table
pdf_path = "your_file.pdf"
doc = fitz.open(pdf_path)

for page_number in range(min(3, len(doc))):
    page = doc.load_page(page_number)
    pix = page.get_pixmap(dpi=300)
    image_path = f"page_{page_number + 1}.jpg"
    pix.save(image_path)

    table_data = extract_second_table(image_path, debug=True)

    if table_data:
        df = pd.DataFrame(table_data)
        output_path = f"second_table_page{page_number + 1}.xlsx"
        df.to_excel(output_path, index=False, header=False)
        print(f"Saved: {output_path}")
    else:
        print(f"Page {page_number + 1}: Second table not detected or has no valid rows.")

    os.remove(image_path)
