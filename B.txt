import fitz  # PyMuPDF
import cv2
import numpy as np
import os

pdf_path = "your_file.pdf"
doc = fitz.open(pdf_path)

for page_number in range(min(3, len(doc))):
    page = doc.load_page(page_number)
    pix = page.get_pixmap(dpi=300)
    image_path = f"page_{page_number + 1}.jpg"
    pix.save(image_path)

    # Continue your OpenCV table detection here (same as earlier)
    img = cv2.imread(image_path)
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    gray = cv2.bitwise_not(gray)
    _, thresh = cv2.threshold(gray, 128, 255, cv2.THRESH_BINARY | cv2.THRESH_OTSU)

    horizontal_kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (40, 1))
    horizontal_lines = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, horizontal_kernel, iterations=2)

    vertical_kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (1, 20))
    vertical_lines = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, vertical_kernel, iterations=2)

    table_mask = cv2.add(horizontal_lines, vertical_lines)
    contours, _ = cv2.findContours(table_mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    bounding_boxes = [cv2.boundingRect(c) for c in contours]
    sorted_boxes = sorted(bounding_boxes, key=lambda b: b[1])

    # Group boxes into tables
    tables = []
    current_table = []
    last_y = -100
    for box in sorted_boxes:
        x, y, w, h = box
        if abs(y - last_y) > 50 and current_table:
            tables.append(current_table)
            current_table = []
        current_table.append(box)
        last_y = y
    if current_table:
        tables.append(current_table)

    if len(tables) >= 2:
        table_boxes = tables[1]
        min_x = min([x for x, y, w, h in table_boxes])
        min_y = min([y for x, y, w, h in table_boxes])
        max_x = max([x + w for x, y, w, h in table_boxes])
        max_y = max([y + h for x, y, w, h in table_boxes])
        table_img = img[min_y:max_y, min_x:max_x]
        cv2.imwrite(f"second_table_page{page_number + 1}.jpg", table_img)
        print(f"Saved: second_table_page{page_number + 1}.jpg")
    else:
        print(f"Page {page_number + 1}: Less than 2 tables found.")

    os.remove(image_path)
